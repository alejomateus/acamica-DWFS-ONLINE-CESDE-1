swagger: "2.0"
info:
  description: "Sistema de tres tablas para la administración de un foro "
  version: "1.0.0"
  title: "Administración del foro"
  contact:
    email: "alejo.mateus.ud@gmail.com"
tags:
- name: "users"
  description: "Operaciones sobre los usuarios"
- name: "topics"
  description: "Operaciones sobre los topicos"
- name: "comments"
  description: "Operaciones sobre los comentarios"
schemes:
- "http"
paths:
  /users:
    post:
      tags:
      - "users"
      summary: "creo un nuevo usuario"
      operationId: "newUser"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Objeto para crear un usuario"
        required: true
        schema:
          $ref: "#/definitions/users"
      responses:
        "400":
          description: "Invalid request"
        "200":
          description: "Creacion exitosa de usuario"
    get:
      tags:
      - "users"
      summary: "Obtener un listado de usuarios"
      operationId: "getUsers"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        "200":
          description: "Operacion Realizada"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/users"
        "400":
          description: "Invalid request"
  /users/{usersId}:
    get:
      tags:
      - "users"
      summary: "obtener la información de un usuario especifico"
      operationId: "getUser"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "usersId"
        in: "path"
        description: "Identifica el id del usuario"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "Operacion Realizada"
          schema:
            $ref: "#/definitions/users"
        "400":
          description: "Invalid request"
        "404":
          description: "Elemento no encontrado"
    put:
      tags:
      - "users"
      summary: "actualizar un  usuario"
      operationId: "updateUser"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "usersId"
        in: "path"
        description: "Identifica el id del usuario"
        required: true
        type: "integer"
        format: "int64"
      - in: "body"
        name: "body"
        description: "Objeto para crear un usuario"
        required: true
        schema:
          $ref: "#/definitions/updateUser"
      responses:
        "400":
          description: "Invalid request"
        "200":
          description: "Actualización exitosa de usuario"
    delete:
      tags:
      - "users"
      summary: "eliminar un  usuario"
      operationId: "deleteUser"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "usersId"
        in: "path"
        description: "Identifica el id del usuario"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "400":
          description: "Invalid request"
        "200":
          description: "Eliminación exitosa de usuario"
  /topics:
    post:
      tags:
      - "topics"
      summary: "creo un nuevo topico"
      operationId: "newTopic"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Objeto para crear un topico"
        required: true
        schema:
          $ref: "#/definitions/topics"
      responses:
        "400":
          description: "Invalid request"
        "200":
          description: "Creacion exitosa de topico"
    get:
      tags:
      - "topics"
      summary: "Obtener un listado de topicos"
      operationId: "gettopics"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        "200":
          description: "Operacion Realizada"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/topics"
        "400":
          description: "Invalid request"
  /topics/{topicsId}:
    get:
      tags:
      - "topics"
      summary: "obtener la información de un topico especifico"
      operationId: "getTopic"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "topicsId"
        in: "path"
        description: "Identifica el id del topico"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "Operacion Realizada"
          schema:
            $ref: "#/definitions/topics"
        "400":
          description: "Invalid request"
        "404":
          description: "Elemento no encontrado"
    put:
      tags:
      - "topics"
      summary: "actualizar un  topico"
      operationId: "updateTopic"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "topicsId"
        in: "path"
        description: "Identifica el id del topico"
        required: true
        type: "integer"
        format: "int64"
      - in: "body"
        name: "body"
        description: "Objeto para crear un topico"
        required: true
        schema:
          $ref: "#/definitions/updateTopic"
      responses:
        "400":
          description: "Invalid request"
        "200":
          description: "Actualización exitosa de topico"
    delete:
      tags:
      - "topics"
      summary: "eliminar un  topico"
      operationId: "deleteTopic"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "topicsId"
        in: "path"
        description: "Identifica el id del topico"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "400":
          description: "Invalid request"
        "200":
          description: "Eliminación exitosa de topico"
  /comments:
    post:
      tags:
      - "comments"
      summary: "creo un nuevo comentario"
      operationId: "newComment"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Objeto para crear un comentario"
        required: true
        schema:
          $ref: "#/definitions/comments"
      responses:
          "400":
            description: "Invalid request"
          "200":
            description: "Creacion exitosa de comentario"
    get:
      tags:
      - "comments"
      summary: "Obtener un listado de comentarios"
      operationId: "getcomments"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
        - name: "userId"
          in: "query"
          description: "Id del usuario"
          required: false
          type: "integer"
          format: "int64"
        - name: "topicId"
          in: "query"
          description: "Id del topico"
          required: false
          type: "integer"
          format: "int64"
      responses:
        "200":
          description: "Operacion Realizada"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/comments"
        "400":
          description: "Invalid request"
  /comments/{commentsId}:
    get:
      tags:
      - "comments"
      summary: "obtener la información de un comentario especifico"
      operationId: "getComment"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "commentsId"
        in: "path"
        description: "Identifica el id del comentario"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "Operacion Realizada"
          schema:
            $ref: "#/definitions/comments"
        "400":
          description: "Invalid request"
        "404":
          description: "Elemento no encontrado"
    put:
      tags:
      - "comments"
      summary: "actualizar un  comentario"
      operationId: "updateComment"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "commentsId"
        in: "path"
        description: "Identifica el id del comentario"
        required: true
        type: "integer"
        format: "int64"
      - in: "body"
        name: "body"
        description: "Objeto para crear un comentario"
        required: true
        schema:
          $ref: "#/definitions/updateComment"
      responses:
        "400":
          description: "Invalid request"
        "200":
          description: "Actualización exitosa de comentario"
    delete:
      tags:
      - "comments"
      summary: "eliminar un  comentario"
      operationId: "deleteComment"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "commentsId"
        in: "path"
        description: "Identifica el id del comentario"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "400":
          description: "Invalid request"
        "200":
          description: "Eliminación exitosa de comentario"
definitions:
  users:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      lastname:
        type: "string"
      email:
        type: "string"
      active:
        type: "boolean"
  updateUser:
    type: "object"
    properties:
      name:
        type: "string"
      lastname:
        type: "string"
      email:
        type: "string"
      active:
        type: "boolean"
  topics:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      title:
        type: "string"
      description:
        type: "string"
      active:
        type: "boolean"
  updateTopic:
    type: "object"
    properties:
      title:
        type: "string"
      description:
        type: "string"
      active:
        type: "boolean"
  comments:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      userId:
        type: "integer"
        format: "int64"
      topicId:
        type: "integer"
        format: "int64"
      comment:
        type: "string"
      active:
        type: "boolean"
  updateComment:
    type: "object"
    properties:
      userId:
        type: "integer"
        format: "int64"
      topicId:
        type: "integer"
        format: "int64"
      comment:
        type: "string"
      active:
        type: "boolean"